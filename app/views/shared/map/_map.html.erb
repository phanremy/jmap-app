<%= turbo_frame_tag :map_container do %>
  <div id="map"
      class="w-full h-[100vh]"
      data-controller="<%# map%>"
      data-map-markers-value="<%#= [{ latitude: 48.8566, longitude: 2.3522 }].to_json %>"
      data-map-api-key-value="<%#= ENV['MAPBOX_API_KEY'] %>"></div>
<% end %>

<script>
  mapboxgl.accessToken = '<%= ENV['MAPBOX_API_KEY'] %>';

  const bounds = [
    [128.14779633276876, 29.6010980729196447], // Southwest coordinates
    [148.350203215486, 46.03004580866485] // Northeast coordinates
  ];

  const map = new mapboxgl.Map({
    container: 'map',
    // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
    style: 'mapbox://styles/mapbox/streets-v12',
    // center: [138.2529, 36.2048],
    maxBounds: bounds,
    zoom: 4
  });

  const cities_markers = JSON.parse('<%= raw generate_json(@cities_markers) %>');

  <% marker_colors = COLORS[:markers] %>
  cities_markers.forEach(function(marker) {
    var el = document.createElement('a');
    el.className = 'marker';
    el.style.backgroundImage = 'url(<%= image_url("map/mapbox-marker-icon-#{marker_colors[:city]}.svg") %>)';
    el.style.width = '20px';
    el.style.height = '30px';
    el.href = '/posts?location_id=' + marker.id
    el.setAttribute('data-turbo-action', 'replace');
    el.setAttribute('data-turbo-frame', 'posts_index');
    var marker = new mapboxgl.Marker(el)
                  .setLngLat(marker.coordinates)
                  .addTo(map);
  });

  const features = cities_markers.map(function(marker) {
    return {
      'type': 'Feature',
      'properties': {
        'description': `<strong>${marker.name}</strong>`
      },
      'geometry': {
        'type': 'Point',
        'coordinates': marker.coordinates
      }
    }
  })


  map.on('load', () => {
    map.addSource('places', {
      'type': 'geojson',
      'data': {
          'type': 'FeatureCollection',
          'features': features
      }
    });

    map.addLayer({
      'id': 'places',
      'type': 'circle',
      'source': 'places',
      'paint': {
        'circle-color': '#ffffff',
        'circle-opacity': 0,
        'circle-radius': 6,
        'circle-stroke-width': 0,
        'circle-stroke-color': '#ffffff'
      }
    });

    const popup = new mapboxgl.Popup({
      closeButton: false,
      closeOnClick: false
    });

    map.on('mouseenter', 'places', (e) => {
      map.getCanvas().style.cursor = 'pointer';
      const coordinates = e.features[0].geometry.coordinates.slice();
      const description = e.features[0].properties.description;

      popup.setLngLat(coordinates).setHTML(description).addTo(map);
    });

    map.on('mouseleave', 'places', () => {
      map.getCanvas().style.cursor = '';
      popup.remove();
    });
  });
</script>
